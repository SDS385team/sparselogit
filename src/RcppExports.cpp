// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sparse_logit
List sparse_logit(const arma::vec& beta0, const arma::sp_mat& Xt, const arma::vec& y, const double lambda, const int maxepochs, const double step_scale, const double tol, const double discount);
RcppExport SEXP _sparselogit_sparse_logit(SEXP beta0SEXP, SEXP XtSEXP, SEXP ySEXP, SEXP lambdaSEXP, SEXP maxepochsSEXP, SEXP step_scaleSEXP, SEXP tolSEXP, SEXP discountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Xt(XtSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const int >::type maxepochs(maxepochsSEXP);
    Rcpp::traits::input_parameter< const double >::type step_scale(step_scaleSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const double >::type discount(discountSEXP);
    rcpp_result_gen = Rcpp::wrap(sparse_logit(beta0, Xt, y, lambda, maxepochs, step_scale, tol, discount));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sparselogit_sparse_logit", (DL_FUNC) &_sparselogit_sparse_logit, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_sparselogit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
